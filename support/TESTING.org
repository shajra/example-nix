#+TITLE: Testing This Project
#+SETUPFILE: ./links.org

There's some testing of this project that is automated, but currently not
everything.  This document captures the state of both.

* Automated Testing

The [[./test-run][./test-run]] script builds everything in the tutorials, and
makes sure the scripts in [[../run][../run]] work.

Additionally, document generation (running [[./docs-generate][./docs-generate]]
exercises all the code in Org-mode files.  But it's harder to assert correctness
with generated documentation.  You have to look at the changes from previous
documentation and make sure the changes are expected.  Most of the time, the
only expected changes are hashes in =/nix/store=.

* Manual Testing

Here's important things that might break, and should be tested before releasing
to the "master" branch:

- Does =direnv-enable=, =direnv-disable=, and the rest still work in a terminal?

- Test Doom Emacs configuration against Haskell tutorial
  - [ ] formatter should be easy to set/use
  - [ ] should work with and without Nix
  - [ ] should work with both Cabal and Stack
  - [ ] hopping to /nix/store source shouldn't start LSP or Dante server
  - [ ] dante: can add custom flags like -Wall (extn-haskell/dante-load-flags-extra)
  - [ ] dante: can navigate to TAGS references
  - [ ] dante: can restart service to pick up new direnv
  - [ ] dante: dir-locals setting of =dante-target=
  - [ ] dante: ~-- >>>~ evaluation
  - [ ] dante: hs: haskell-dante flycheck
  - [ ] dante: hs: hlint flycheck
  - [ ] dante: lhs: haskell-dante flycheck
  - [ ] dante: lhs: hlint flycheck
  - [ ] dante: refactoring with =refactor=
  - [ ] lsp: can navigate to LSP-provided references (not TAGS.local)
  - [ ] lsp: can navigate to TAGS references
  - [ ] lsp: can restart service to pick up new direnv
  - [ ] lsp: ~-- >>>~ evaluation
  - [ ] lsp: hs: haskell-dante flycheck
  - [ ] lsp: hs: hlint flycheck (may have to explicitly switch)
  - [ ] lsp: lhs: haskell-dante flycheck
  - [ ] lsp: lhs: hlint flycheck (may have to explicitly switch)
  - [ ] lsp: refactoring
